package practica6;

import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Javier Aranada
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void paint(Graphics g){
           super.paint(g);
           Graphics2D g2d = (Graphics2D)g;
           this.setAtributos(g2d);//LAmamos al metodo setAtributos
           List<Shape> vShape = new ArrayList();//Para guardar los rectangulos
           for(Shape s:vShape) g2d.draw(s);
}
         private void setAtributos(Graphics2D g2d){
           
            //Trazo
            Stroke trazo=null;
            // TODO: Código para crear trazo
            float patronDiscontinuidad[] = {15.0f, 15.0f};//Creamos el tipo de discontinuidad
            trazo = new BasicStroke(10.0f,
                                 BasicStroke.CAP_ROUND,
                                 BasicStroke.JOIN_MITER, 1.0f,
                                 patronDiscontinuidad, 0.0f);
            g2d.setStroke(trazo);
            
            //Pintamos una forma de prueba
            g2d.draw(new Line2D.Float(40,40,160,160));
            
            //Relleno
            Paint relleno=null;
            // TODO: Código para crear relleno
            relleno = new Color(255, 100, 0);//Le damos un color al relleno
            g2d.setPaint(relleno);
            g2d.draw(new Rectangle(170,40,120,120));//Rectangulo sin relleno
            g2d.fill(new Rectangle(300,40,120,120));//Rectangulo con relleno
            
            //Caso de relleno con degradado
            Point pc1 = new Point(430,40),pc2 = new Point(550,160);
            relleno = new GradientPaint(pc1, Color.RED, pc2, Color.BLUE); g2d.setPaint(relleno);
            g2d.fill(new Rectangle(430,40,120,120));
           
            //Composición
            Composite composicion = null;
            
            // TODO: Código para crear composición
            composicion = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
            g2d.setComposite(composicion);
            g2d.fill(new Rectangle(190, 100, 200, 120));
           
            //Transformación
            AffineTransform at = null;
            // TODO: Código para crear transformación
            Rectangle r = new Rectangle(430, 190, 120, 120);
            g2d.draw(r); //Dibujamos rectángulo sin transformación
           
            //Lo rotamos tomando las coordenadas del centro del rectangulo
            at = AffineTransform.getRotateInstance(Math.toRadians(45.0),r.getCenterX(),r.getCenterY());
            g2d.setTransform(at);
            g2d.fill(r); //Dibujamos rectángulo con transformación
            
            //Lo dibujamos a escala pero se despaza la posicion
            at = AffineTransform.getScaleInstance(0.5,0.5);
            g2d.setTransform(at);
            g2d.draw(r);
            
            //Arreglamos el desplazamiento
            at.setToIdentity();
            at.translate(r.getCenterX(),r.getCenterY());
            at.scale(0.5,0.5);
            at.translate(-r.getCenterX(),-r.getCenterY());
            g2d.setTransform(at);
            g2d.draw(r);
            
            //Fuente
            Font fuente = null;
            // TODO: Código para crear fuente
            g2d.setFont(fuente);
           
            //Renderización
            RenderingHints render = null;
            // TODO: Código para crear renderizado
            g2d.setRenderingHints(render);
           
            //Recorte
            Shape clip = null;
            // TODO: Código para crear clip
            g2d.setClip(clip);
            
            /* paso 8
            concatenar operaciones,
            1º transladar el cuadrado
            2º tenemos que escalarlo
            3º lo traemos de vuelta
            
            */
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
