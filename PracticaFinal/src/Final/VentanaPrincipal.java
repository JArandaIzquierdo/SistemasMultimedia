/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Final;

import java.awt.BasicStroke;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import static java.awt.image.AffineTransformOp.TYPE_BILINEAR;
import java.awt.image.BufferedImage;
import static java.awt.image.BufferedImage.TYPE_INT_RGB;
import java.awt.image.ConvolveOp;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import sm.JAI.iu.Lienzo2DImagen;
import static sm.image.ImageTools.convertImageType;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;

/**
 *
 * @author JaviAir
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupShapesYEditar = new javax.swing.ButtonGroup();
        buttonGroupColores = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonNuevo = new javax.swing.JButton();
        jButtonAbrir = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jToggleButtonPunto = new javax.swing.JToggleButton();
        jToggleButtonLinea = new javax.swing.JToggleButton();
        jToggleButtonRectangulo = new javax.swing.JToggleButton();
        jToggleButtonElipse = new javax.swing.JToggleButton();
        jToggleButtonEditar = new javax.swing.JToggleButton();
        jSpinnerGrosor = new javax.swing.JSpinner();
        jToggleButtonRellenar = new javax.swing.JToggleButton();
        jToggleButtonTransparencia = new javax.swing.JToggleButton();
        jToggleButtonAlisar = new javax.swing.JToggleButton();
        jButtonNegro = new javax.swing.JButton();
        escritorio = new javax.swing.JDesktopPane();
        jPanelImagenYBarraEstado = new javax.swing.JPanel();
        jToolBarImagen = new javax.swing.JToolBar();
        jPanelHerramientasImagen = new javax.swing.JPanel();
        jPanelBrillo = new javax.swing.JPanel();
        jSliderBrillo = new javax.swing.JSlider();
        jPanelFiltro = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanelContraste = new javax.swing.JPanel();
        jButtonContraste = new javax.swing.JButton();
        jButtonOscurecer = new javax.swing.JButton();
        jButtonIluminar = new javax.swing.JButton();
        jPanelRotacion = new javax.swing.JPanel();
        jSliderRotacion = new javax.swing.JSlider();
        jButton90 = new javax.swing.JButton();
        jButton180 = new javax.swing.JButton();
        jButton270 = new javax.swing.JButton();
        jPanelEscala = new javax.swing.JPanel();
        jButtonAumentar = new javax.swing.JButton();
        jButtonDIsminuir = new javax.swing.JButton();
        jButtonSinu = new javax.swing.JButton();
        jLabelBarraEstado = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItemAbrir√ß = new javax.swing.JMenuItem();
        jMenuItemGuardar = new javax.swing.JMenuItem();
        jMenuItemAbrirAudio = new javax.swing.JMenuItem();
        jMenuItemGuardarAudio = new javax.swing.JMenuItem();
        jMenuVer = new javax.swing.JMenu();
        jCheckBoxMenuItemEdicion = new javax.swing.JCheckBoxMenuItem();
        jMenuItemBarraFormas = new javax.swing.JMenuItem();
        jMenuItemBarraAtributos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/nuevo.png"))); // NOI18N
        jButtonNuevo.setFocusable(false);
        jButtonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNuevo);

        jButtonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/abrir.png"))); // NOI18N
        jButtonAbrir.setFocusable(false);
        jButtonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAbrir);

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/Guardar.gif"))); // NOI18N
        jButtonGuardar.setFocusable(false);
        jButtonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonGuardar);

        buttonGroupShapesYEditar.add(jToggleButtonPunto);
        jToggleButtonPunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/punto.png"))); // NOI18N
        jToggleButtonPunto.setFocusable(false);
        jToggleButtonPunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonPunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonPunto);

        buttonGroupShapesYEditar.add(jToggleButtonLinea);
        jToggleButtonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/linea.png"))); // NOI18N
        jToggleButtonLinea.setFocusable(false);
        jToggleButtonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLineaActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButtonLinea);

        buttonGroupShapesYEditar.add(jToggleButtonRectangulo);
        jToggleButtonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/rectangulo.png"))); // NOI18N
        jToggleButtonRectangulo.setFocusable(false);
        jToggleButtonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonRectangulo);

        buttonGroupShapesYEditar.add(jToggleButtonElipse);
        jToggleButtonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/elipse.png"))); // NOI18N
        jToggleButtonElipse.setFocusable(false);
        jToggleButtonElipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonElipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonElipse);

        buttonGroupShapesYEditar.add(jToggleButtonEditar);
        jToggleButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/seleccion.png"))); // NOI18N
        jToggleButtonEditar.setFocusable(false);
        jToggleButtonEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonEditar);

        jSpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerGrosorStateChanged(evt);
            }
        });
        jToolBar1.add(jSpinnerGrosor);

        jToggleButtonRellenar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/rellenar.png"))); // NOI18N
        jToggleButtonRellenar.setFocusable(false);
        jToggleButtonRellenar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRellenar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonRellenar);

        jToggleButtonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/transparencia.png"))); // NOI18N
        jToggleButtonTransparencia.setFocusable(false);
        jToggleButtonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonTransparencia);

        jToggleButtonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/alisar.png"))); // NOI18N
        jToggleButtonAlisar.setFocusable(false);
        jToggleButtonAlisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonAlisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jToggleButtonAlisar);

        jButtonNegro.setBackground(new java.awt.Color(0, 0, 0));
        jButtonNegro.setText("tytytyt");
        jButtonNegro.setFocusable(false);
        jButtonNegro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNegro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNegro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNegroActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNegro);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 317, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jPanelImagenYBarraEstado.setLayout(new java.awt.BorderLayout());

        jToolBarImagen.setRollover(true);

        jPanelBrillo.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Brillo"));

        jSliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrilloStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrilloLayout = new javax.swing.GroupLayout(jPanelBrillo);
        jPanelBrillo.setLayout(jPanelBrilloLayout);
        jPanelBrilloLayout.setHorizontalGroup(
            jPanelBrilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSliderBrillo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanelBrilloLayout.setVerticalGroup(
            jPanelBrilloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrilloLayout.createSequentialGroup()
                .addComponent(jSliderBrillo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Filtro"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Fronteras laplaciano" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFiltroLayout = new javax.swing.GroupLayout(jPanelFiltro);
        jPanelFiltro.setLayout(jPanelFiltroLayout);
        jPanelFiltroLayout.setHorizontalGroup(
            jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, 0, 92, Short.MAX_VALUE)
        );
        jPanelFiltroLayout.setVerticalGroup(
            jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltroLayout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelContraste.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Contraste"));

        jButtonContraste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/contraste.png"))); // NOI18N
        jButtonContraste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContrasteActionPerformed(evt);
            }
        });

        jButtonOscurecer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/oscurecer.png"))); // NOI18N
        jButtonOscurecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOscurecerActionPerformed(evt);
            }
        });

        jButtonIluminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/iluminar.png"))); // NOI18N
        jButtonIluminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIluminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelContrasteLayout = new javax.swing.GroupLayout(jPanelContraste);
        jPanelContraste.setLayout(jPanelContrasteLayout);
        jPanelContrasteLayout.setHorizontalGroup(
            jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContrasteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonContraste, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOscurecer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonIluminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelContrasteLayout.setVerticalGroup(
            jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContrasteLayout.createSequentialGroup()
                .addGroup(jPanelContrasteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonContraste, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOscurecer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonIluminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelRotacion.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Rotacion"));

        jSliderRotacion.setMaximum(360);
        jSliderRotacion.setMinorTickSpacing(90);
        jSliderRotacion.setPaintTicks(true);
        jSliderRotacion.setValue(180);

        jButton90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/rotacion90.png"))); // NOI18N

        jButton180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/rotacion180.png"))); // NOI18N
        jButton180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton180ActionPerformed(evt);
            }
        });

        jButton270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/rotacion270.png"))); // NOI18N
        jButton270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton270ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRotacionLayout = new javax.swing.GroupLayout(jPanelRotacion);
        jPanelRotacion.setLayout(jPanelRotacionLayout);
        jPanelRotacionLayout.setHorizontalGroup(
            jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotacionLayout.createSequentialGroup()
                .addComponent(jSliderRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton90, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton180, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton270, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelRotacionLayout.setVerticalGroup(
            jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotacionLayout.createSequentialGroup()
                .addGroup(jPanelRotacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton90, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton180, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton270, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderRotacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelEscala.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Escala"));

        jButtonAumentar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/aumentar.png"))); // NOI18N
        jButtonAumentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAumentarActionPerformed(evt);
            }
        });

        jButtonDIsminuir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/disminuir.png"))); // NOI18N
        jButtonDIsminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDIsminuirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEscalaLayout = new javax.swing.GroupLayout(jPanelEscala);
        jPanelEscala.setLayout(jPanelEscalaLayout);
        jPanelEscalaLayout.setHorizontalGroup(
            jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEscalaLayout.createSequentialGroup()
                .addComponent(jButtonAumentar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDIsminuir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelEscalaLayout.setVerticalGroup(
            jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEscalaLayout.createSequentialGroup()
                .addGroup(jPanelEscalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAumentar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDIsminuir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jButtonSinu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sm/JAI/images/sinusoidal.png"))); // NOI18N

        javax.swing.GroupLayout jPanelHerramientasImagenLayout = new javax.swing.GroupLayout(jPanelHerramientasImagen);
        jPanelHerramientasImagen.setLayout(jPanelHerramientasImagenLayout);
        jPanelHerramientasImagenLayout.setHorizontalGroup(
            jPanelHerramientasImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHerramientasImagenLayout.createSequentialGroup()
                .addComponent(jPanelBrillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContraste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelRotacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSinu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelHerramientasImagenLayout.setVerticalGroup(
            jPanelHerramientasImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHerramientasImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHerramientasImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBrillo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelContraste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelRotacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelHerramientasImagenLayout.createSequentialGroup()
                        .addComponent(jPanelEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHerramientasImagenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSinu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jToolBarImagen.add(jPanelHerramientasImagen);

        jPanelImagenYBarraEstado.add(jToolBarImagen, java.awt.BorderLayout.CENTER);

        jLabelBarraEstado.setText("Barra de estado");
        jLabelBarraEstado.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));
        jPanelImagenYBarraEstado.add(jLabelBarraEstado, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanelImagenYBarraEstado, java.awt.BorderLayout.SOUTH);

        jMenuArchivo.setText("Archivo");

        jMenuItemNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemNuevo);

        jMenuItemAbrir√ß.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAbrir√ß.setText("Abrir");
        jMenuItemAbrir√ß.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrir√ßActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemAbrir√ß);

        jMenuItemGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemGuardar.setText("Guardar");
        jMenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardar);

        jMenuItemAbrirAudio.setText("Abrir Audio");
        jMenuItemAbrirAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirAudioActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemAbrirAudio);

        jMenuItemGuardarAudio.setText("Guardar Audio");
        jMenuItemGuardarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarAudioActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardarAudio);

        jMenuBar2.add(jMenuArchivo);

        jMenuVer.setText("Ver");

        jCheckBoxMenuItemEdicion.setSelected(true);
        jCheckBoxMenuItemEdicion.setText("Ver barra de estado");
        jCheckBoxMenuItemEdicion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxMenuItemEdicionStateChanged(evt);
            }
        });
        jMenuVer.add(jCheckBoxMenuItemEdicion);

        jMenuItemBarraFormas.setText("Ver barra de formar");
        jMenuItemBarraFormas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jMenuItemBarraFormasStateChanged(evt);
            }
        });
        jMenuVer.add(jMenuItemBarraFormas);

        jMenuItemBarraAtributos.setText("Ver barra de atributos");
        jMenuItemBarraAtributos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jMenuItemBarraAtributosStateChanged(evt);
            }
        });
        jMenuVer.add(jMenuItemBarraAtributos);

        jMenuBar2.add(jMenuVer);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        //Creamos una nueva VentanaInterna con una imagen
        VentanaInterna vi = new VentanaInterna();
        //A√±adimos la ventana interna al esccritorio
        escritorio.add(vi);
        vi.setVisible(true);
//        BufferedImage img;
//        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
//        //codigo para que sea blanca, pintar un rectangulo blanco en la imagen (HACER)
//        vi.getLienzo().setImage(img);

    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItemAbrir√ßActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrir√ßActionPerformed
                
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                 File f = dlg.getSelectedFile();
                 BufferedImage img = ImageIO.read(f);
                 VentanaInterna vi = new VentanaInterna();
                 vi.getLienzo().setImage(img);
                 this.escritorio.add(vi);
                 vi.setTitle(f.getName());
                 vi.setVisible(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_jMenuItemAbrir√ßActionPerformed

    private void jMenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarActionPerformed

        VentanaInterna vi=(VentanaInterna) escritorio.getSelectedFrame();
            if (vi != null) {
                JFileChooser dlg = new JFileChooser();
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        BufferedImage img = vi.getLienzo().getImage();
                        if (img != null) {
                            File f = dlg.getSelectedFile();
                            ImageIO.write(img, "jpg", f);
                            vi.setTitle(f.getName());
}
                    }catch (Exception ex) {
                        System.err.println("Error al guardar la imagen");
                    }
               }
            }
    }//GEN-LAST:event_jMenuItemGuardarActionPerformed

    private void jCheckBoxMenuItemEdicionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemEdicionStateChanged
        // Con este checkBox controlamos que la barra de estado sea visible o no
        this.jLabelBarraEstado.setVisible(this.jCheckBoxMenuItemEdicion.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemEdicionStateChanged

    private void jMenuItemBarraFormasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jMenuItemBarraFormasStateChanged
        // TODO add your handling code here:
        // Con este checkBox controlamos que la barra de estado sea visible o no
        this.jMenuItemBarraFormas.setVisible(this.jCheckBoxMenuItemEdicion.isSelected());
    }//GEN-LAST:event_jMenuItemBarraFormasStateChanged

    private void jMenuItemBarraAtributosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jMenuItemBarraAtributosStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemBarraAtributosStateChanged

    private void jToggleButtonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLineaActionPerformed
        // Boton de Linea
        
        
    }//GEN-LAST:event_jToggleButtonLineaActionPerformed

    private void jButtonContrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContrasteActionPerformed
        // Boton LookupOp del menu Imagen
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            BufferedImage imagenConvertida= convertImageType(imagenOriginal,TYPE_INT_RGB);
            if(imagenOriginal!=null){
                    try{
                        LookupTable lt; 
                        lt=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_SFUNCION);
                        LookupOp lop = new LookupOp(lt, null); 
                        BufferedImage imagenDestino = lop.filter(imagenConvertida,null); 
                        
    
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButtonContrasteActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        //Creamos nuevos lienzos
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
    }//GEN-LAST:event_jButtonNuevoActionPerformed
BufferedImage imagenNueva;//Variable que toma el valor del brillo
    private void jSliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrilloStateChanged
        // Slide que controla el brillo
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenNueva==null)imagenNueva=imagenOriginal;
            if(imagenOriginal!=null){
                try{
                    float valorBrilloSlider=jSliderBrillo.getValue();
                    RescaleOp brillo=new RescaleOp (1.0F,valorBrilloSlider,null);
                    BufferedImage imagenDestino = brillo.filter(imagenNueva,null);
                    vi.getLienzo().setImage(imagenDestino);
                    vi.getLienzo().repaint();}
                catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
                
            }
    }//GEN-LAST:event_jSliderBrilloStateChanged

    private void jSpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerGrosorStateChanged
        // Spiner que controla el grosor de las shapes
        Lienzo2DImagen.setStroke(new BasicStroke(((Integer)jSpinnerGrosor.getValue()).intValue()));
        repaint();
    }//GEN-LAST:event_jSpinnerGrosorStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Menu de filtros
        int seleccionarFiltro=jComboBox1.getSelectedIndex();
        Kernel k=null;
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenOriginal!=null){
                try{
                    switch(seleccionarFiltro){
                        case 0:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_MEDIA_3x3);
                            break;
                        case 1:
                           k= KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
                            break;
                        case 2:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
                            break;
                        case 3:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
                            break;
                        case 4:
                            k=KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
                            break;
                       
                     }
  
                    ConvolveOp cop = new ConvolveOp(k);
                    BufferedImage imagenDestino = cop.filter(imagenOriginal,null);
                    vi.getLienzo().setImage(imagenDestino);
                    vi.getLienzo().repaint();}
                catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonOscurecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOscurecerActionPerformed
        // Boton LookupOp de oscurecer
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            BufferedImage imagenConvertida= convertImageType(imagenOriginal,TYPE_INT_RGB);
            if(imagenOriginal!=null){
                    try{
                        LookupTable lt; 
                        lt=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_POWER);
                        LookupOp lop = new LookupOp(lt, null); 
                        BufferedImage imagenDestino = lop.filter(imagenConvertida,null); 
                        
    
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButtonOscurecerActionPerformed

    private void jButtonIluminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIluminarActionPerformed
        // Boton LookupOp de iluminar
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            BufferedImage imagenConvertida= convertImageType(imagenOriginal,TYPE_INT_RGB);
            if(imagenOriginal!=null){
                    try{
                        LookupTable lt; 
                        lt=LookupTableProducer.createLookupTable(LookupTableProducer.TYPE_GAMMA_CORRECTION);
                        LookupOp lop = new LookupOp(lt, null); 
                        BufferedImage imagenDestino = lop.filter(imagenConvertida,null); 
                        
    
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButtonIluminarActionPerformed

    private void jButton180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton180ActionPerformed
        // Boton AffineTransformOp para rotacion de 180¬∫
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenOriginal!=null){
                AffineTransform at = AffineTransform.getRotateInstance(Math.toRadians(180.0),
                imagenOriginal.getWidth()/2,imagenOriginal.getHeight()/2);

                    try{
                        AffineTransformOp atop = new AffineTransformOp(at,TYPE_BILINEAR);

                        BufferedImage imagenDestino = atop.filter(imagenOriginal,null);
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButton180ActionPerformed

    private void jButton270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton270ActionPerformed
        // Boton AffineTransformOp para rotacion de 270¬∫
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenOriginal!=null){
                AffineTransform at = AffineTransform.getRotateInstance(Math.toRadians(270.0),
                imagenOriginal.getWidth()/2,imagenOriginal.getHeight()/2);

                    try{
                        AffineTransformOp atop = new AffineTransformOp(at,TYPE_BILINEAR);

                        BufferedImage imagenDestino = atop.filter(imagenOriginal,null);
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButton270ActionPerformed

    private void jButtonAumentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAumentarActionPerformed
        // Boton para aumentar la imagen
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenOriginal!=null){
                AffineTransform at = AffineTransform.getScaleInstance(1.25,1.25);
                    try{
                        AffineTransformOp atop = new AffineTransformOp(at,TYPE_BILINEAR);

                        BufferedImage imagenDestino = atop.filter(imagenOriginal,null);
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButtonAumentarActionPerformed

    private void jButtonDIsminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDIsminuirActionPerformed
        // Boton para disminuir la imagen
        VentanaInterna vi= (VentanaInterna)(escritorio.getSelectedFrame());
        if (vi!=null){
            BufferedImage imagenOriginal = vi.getLienzo().getImage();
            if(imagenOriginal!=null){
                AffineTransform at = AffineTransform.getScaleInstance(0.75,0.75);
                    try{
                        AffineTransformOp atop = new AffineTransformOp(at,TYPE_BILINEAR);

                        BufferedImage imagenDestino = atop.filter(imagenOriginal,null);
                        vi.getLienzo().setImage(imagenDestino);
                        vi.getLienzo().repaint();}
                    catch(IllegalArgumentException e){System.err.println(e.getLocalizedMessage());}
                            
                    }
                }
    }//GEN-LAST:event_jButtonDIsminuirActionPerformed

    private void jMenuItemAbrirAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirAudioActionPerformed
        // Boton para abrir sonido:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
        File f = dlg.getSelectedFile();
         
            try {
                 VentanaInternaReproductor vr=new VentanaInternaReproductor(f);
                 this.escritorio.add(vr); 
                 vr.setVisible(true); 
            } catch (Exception ex) {
                Logger.getLogger(Final.VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
       
        }
    }//GEN-LAST:event_jMenuItemAbrirAudioActionPerformed

    private void jMenuItemGuardarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarAudioActionPerformed
        // Guardar un sonido
        JFileChooser dlg = new JFileChooser();
        //dlg.addChoosableFileFilter()
        int resp = dlg.showSaveDialog(this);
        if(resp == JFileChooser.APPROVE_OPTION) {
        File f = dlg.getSelectedFile();       
            try{ 
               VentanaGrabarSonido gs = new VentanaGrabarSonido(f);
                this.escritorio.add(gs);
                gs.setVisible(true);
                    }catch(Exception ex){ 
       System.err.println("Error al grabar el sonido"); 
   
                    } 
        } 
    }//GEN-LAST:event_jMenuItemGuardarAudioActionPerformed

    private void jButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirActionPerformed
                
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                 File f = dlg.getSelectedFile();
                 BufferedImage img = ImageIO.read(f);
                 VentanaInterna vi = new VentanaInterna();
                 vi.getLienzo().setImage(img);
                 this.escritorio.add(vi);
                 vi.setTitle(f.getName());
                 vi.setVisible(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_jButtonAbrirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        
        VentanaInterna vi=(VentanaInterna) escritorio.getSelectedFrame();
            if (vi != null) {
                JFileChooser dlg = new JFileChooser();
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        BufferedImage img = vi.getLienzo().getImage();
                        if (img != null) {
                            File f = dlg.getSelectedFile();
                            ImageIO.write(img, "jpg", f);
                            vi.setTitle(f.getName());
}
                    }catch (Exception ex) {
                        System.err.println("Error al guardar la imagen");
                    }
               }
            }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonNegroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNegroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNegroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupColores;
    private javax.swing.ButtonGroup buttonGroupShapesYEditar;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButton180;
    private javax.swing.JButton jButton270;
    private javax.swing.JButton jButton90;
    private javax.swing.JButton jButtonAbrir;
    private javax.swing.JButton jButtonAumentar;
    private javax.swing.JButton jButtonContraste;
    private javax.swing.JButton jButtonDIsminuir;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonIluminar;
    private javax.swing.JButton jButtonNegro;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonOscurecer;
    private javax.swing.JButton jButtonSinu;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemEdicion;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabelBarraEstado;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItemAbrirAudio;
    private javax.swing.JMenuItem jMenuItemAbrir√ß;
    private javax.swing.JMenuItem jMenuItemBarraAtributos;
    private javax.swing.JMenuItem jMenuItemBarraFormas;
    private javax.swing.JMenuItem jMenuItemGuardar;
    private javax.swing.JMenuItem jMenuItemGuardarAudio;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JMenu jMenuVer;
    private javax.swing.JPanel jPanelBrillo;
    private javax.swing.JPanel jPanelContraste;
    private javax.swing.JPanel jPanelEscala;
    private javax.swing.JPanel jPanelFiltro;
    private javax.swing.JPanel jPanelHerramientasImagen;
    private javax.swing.JPanel jPanelImagenYBarraEstado;
    private javax.swing.JPanel jPanelRotacion;
    private javax.swing.JSlider jSliderBrillo;
    private javax.swing.JSlider jSliderRotacion;
    private javax.swing.JSpinner jSpinnerGrosor;
    private javax.swing.JToggleButton jToggleButtonAlisar;
    private javax.swing.JToggleButton jToggleButtonEditar;
    private javax.swing.JToggleButton jToggleButtonElipse;
    private javax.swing.JToggleButton jToggleButtonLinea;
    private javax.swing.JToggleButton jToggleButtonPunto;
    private javax.swing.JToggleButton jToggleButtonRectangulo;
    private javax.swing.JToggleButton jToggleButtonRellenar;
    private javax.swing.JToggleButton jToggleButtonTransparencia;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBarImagen;
    // End of variables declaration//GEN-END:variables
}
